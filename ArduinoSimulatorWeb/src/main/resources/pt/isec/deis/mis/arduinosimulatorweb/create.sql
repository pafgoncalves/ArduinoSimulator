-- MySQL Script generated by MySQL Workbench
-- Dom 30 Jun 2019 18:37:30 WEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering



-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `users` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(500) NOT NULL COMMENT 'email',
  `password` VARCHAR(100) NOT NULL COMMENT 'MD5 da password',
  `verified` INT NOT NULL DEFAULT 0,
  `is_admin` INT NOT NULL DEFAULT 0,
  `date_created` DATETIME NOT NULL,
  `name` VARCHAR(500) NULL COMMENT 'nome completo',
  `validation_id` VARCHAR(45) NULL COMMENT 'UUID para colocar nos links dos emails',
  `password_recover_date` DATETIME NULL,
  `last_simulation_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_users_simulation1_idx` (`last_simulation_id` ASC),
  UNIQUE INDEX `idx_users_username` (`username` ASC))
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `simulation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `simulation` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `uuid` VARCHAR(45) NOT NULL COMMENT 'uuid da objecto simulation',
  `name` VARCHAR(100) NULL COMMENT 'nome que o utilizador dá ao circuito',
  `sketchname` VARCHAR(500) NULL COMMENT 'nome do projecto arduino',
  `binary` BLOB NULL COMMENT 'código a carregar no simulador',
  `debug_info` TEXT NULL COMMENT 'json da informação de debug',
  `circuit` TEXT NULL COMMENT 'json do circuito',
  `eeprom` TEXT NULL COMMENT 'eeprom do arduino',
  `date_created` DATETIME NULL,
  `date_updated` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_simulation_users1_idx` (`user_id` ASC),
  UNIQUE INDEX `uuid_UNIQUE` (`uuid` ASC),
  CONSTRAINT `fk_simulation_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



ALTER TABLE `users` 
    ADD CONSTRAINT `fk_users_simulation1`
    FOREIGN KEY (`last_simulation_id`)
    REFERENCES `simulation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION;

-- -----------------------------------------------------
-- Table `authentication_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `authentication_log` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `date_login` DATETIME NOT NULL,
  `date_logout` DATETIME NULL,
  `logout_type` INT NULL,
  `ip` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_authentication_log_users_idx` (`user_id` ASC),
  CONSTRAINT `fk_authentication_log_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `source_files`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `source_files` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `simulation_id` BIGINT UNSIGNED NOT NULL,
  `filename` VARCHAR(100) NOT NULL COMMENT 'nome do ficheiro',
  `dirname` VARCHAR(500) NOT NULL COMMENT 'directoria do ficheiro',
  `source` TEXT NOT NULL COMMENT 'código fonte',
  PRIMARY KEY (`id`),
  INDEX `fk_source_files_simulation1_idx` (`simulation_id` ASC),
  CONSTRAINT `fk_source_files_simulation1`
    FOREIGN KEY (`simulation_id`)
    REFERENCES `simulation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;





INSERT INTO `users`
(username, password, verified, is_admin, date_created)
VALUES
('${sql.defaultusername}', '${sql.defaultpassword}', 1, 1, NOW());

